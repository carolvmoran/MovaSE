{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\petve\\\\OneDrive\\\\Documentos\\\\MeusProjetos\\\\NLW\\\\mova-se\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    hasFinished,\n    isActive,\n    startCountdown,\n    resetCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownCountainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo Encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetCountdown,\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        children: \"Abandonar Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: startCountdown,\n        className: styles.countdownButton,\n        children: \"Iniciar um Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/petve/OneDrive/Documentos/MeusProjetos/NLW/mova-se/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","isActive","startCountdown","resetCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownCountainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAGxB,QAAM;AAAEC,IAAAA,OAAF;AACFC,IAAAA,OADE;AAEFC,IAAAA,WAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,cAJE;AAKFC,IAAAA;AALE,MAMFT,UAAU,CAACC,gBAAD,CANd;AAOA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACe,mBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaMV,WAAW,gBACT;AAAQ,MAAA,QAAQ,MAAhB;AACI,MAAA,SAAS,EAAEJ,MAAM,CAACgB,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAML;AAAA,gBACMX,QAAQ,gBAEF;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEE,cAA/B;AACI,QAAA,SAAS,EAAG,GAAEP,MAAM,CAACgB,eAAgB,IAAGhB,MAAM,CAACiB,qBAAsB,EADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE,gBAQF;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEX,cAA/B;AACI,QAAA,SAAS,EAAEN,MAAM,CAACgB,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATZ,qBAnBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwCH","sourcesContent":["import { useContext } from 'react';\r\nimport { CountdownContext } from '../contexts/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nexport function Countdown() {\r\n\r\n\r\n    const { minutes,\r\n        seconds,\r\n        hasFinished,\r\n        isActive,\r\n        startCountdown,\r\n        resetCountdown\r\n    } = useContext(CountdownContext)\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('')\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownCountainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            { hasFinished ? (\r\n                <button disabled\r\n                    className={styles.countdownButton}>\r\n                    Ciclo Encerrado\r\n                </button>\r\n            ) : (\r\n                    <>\r\n                        { isActive ?\r\n                            (\r\n                                <button type=\"button\" onClick={resetCountdown}\r\n                                    className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\r\n                                    Abandonar Ciclo\r\n                                </button>\r\n                            ) :\r\n                            (\r\n                                <button type=\"button\" onClick={startCountdown}\r\n                                    className={styles.countdownButton}>\r\n                                    Iniciar um Ciclo\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}