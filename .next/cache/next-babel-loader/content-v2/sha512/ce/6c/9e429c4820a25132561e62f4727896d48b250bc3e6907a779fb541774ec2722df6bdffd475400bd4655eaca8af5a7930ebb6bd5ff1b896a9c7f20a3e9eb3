{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\petve\\\\OneDrive\\\\Documentos\\\\MeusProjetos\\\\NLW\\\\mova-se\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useState, useEffect, useContext } from 'react';\nimport { ChallengesContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Countdown.module.css';\nlet countdownTimeout;\nexport function Countdown() {\n  const {\n    startNewChallenge\n  } = useContext(ChallengesContext);\n  const {\n    0: time,\n    1: setTime\n  } = useState(0.1 * 60);\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(false);\n  const {\n    0: hasFinished,\n    1: setHasFinished\n  } = useState(false);\n  const minutes = Math.floor(time / 60);\n  const seconds = time % 60;\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(() => {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownCountainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo Encerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: resetCountdown,\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        children: \"Abandonar Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: startCountdown,\n        className: styles.countdownButton,\n        children: \"Iniciar um Ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/petve/OneDrive/Documentos/MeusProjetos/NLW/mova-se/src/components/Countdown.tsx"],"names":["useState","useEffect","useContext","ChallengesContext","styles","countdownTimeout","Countdown","startNewChallenge","time","setTime","isActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","startCountdown","resetCountdown","clearTimeout","setTimeout","countdownCountainer","countdownButton","countdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n    const { startNewChallenge } = useContext(ChallengesContext)\r\n\r\n    const [time, setTime] = useState(0.1 * 60)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n\r\n    const minutes = Math.floor(time / 60)\r\n    const seconds = time % 60\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('')\r\n\r\n    function startCountdown() {\r\n        setIsActive(true)\r\n    }\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout)\r\n        setIsActive(false)\r\n        setTime(0.1 * 60)\r\n    }\r\n    useEffect(() => {\r\n        if (isActive && time > 0) {\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time - 1)\r\n            }, 1000)\r\n        } else if (isActive && time === 0) {\r\n            setHasFinished(true)\r\n            setIsActive(false)\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.countdownCountainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            { hasFinished ? (\r\n                <button disabled\r\n                    className={styles.countdownButton}>\r\n                    Ciclo Encerrado\r\n                </button>\r\n            ) : (\r\n                    <>\r\n                        { isActive ?\r\n                            (\r\n                                <button type=\"button\" onClick={resetCountdown}\r\n                                    className={`${styles.countdownButton} ${styles.countdownButtonActive}`}>\r\n                                    Abandonar Ciclo\r\n                                </button>\r\n                            ) :\r\n                            (\r\n                                <button type=\"button\" onClick={startCountdown}\r\n                                    className={styles.countdownButton}>\r\n                                    Iniciar um Ciclo\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}