{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\petve\\\\OneDrive\\\\Documentos\\\\MeusProjetos\\\\NLW\\\\mova-se\\\\src\\\\contexts\\\\ChallengesContext.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { createContext, useState, useEffect } from \"react\";\nimport Cookies from 'js-cookie';\nimport challenges from '../../challenges.json';\nimport { LevelUpModal } from \"../components/LevelUpModal\";\nexport const challengesContext = /*#__PURE__*/createContext({});\nexport const ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  var _rest$level, _rest$currentExperien, _rest$challengesCompl;\n\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const {\n    0: level,\n    1: setLevel\n  } = useState((_rest$level = rest.level) !== null && _rest$level !== void 0 ? _rest$level : 1);\n  const {\n    0: currentExperience,\n    1: setCurrentExperience\n  } = useState((_rest$currentExperien = rest.currentExperience) !== null && _rest$currentExperien !== void 0 ? _rest$currentExperien : 0);\n  const {\n    0: challengesCompleted,\n    1: setChallengesCompleted\n  } = useState((_rest$challengesCompl = rest.challengesCompleted) !== null && _rest$challengesCompl !== void 0 ? _rest$challengesCompl : 0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n  const experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(() => {\n    Notification.requestPermission();\n  }, []);\n  useEffect(() => {\n    Cookies.set('level', String(level));\n    Cookies.set('currentExperience', String(currentExperience));\n    Cookies.set('challengesCompleted', String(challengesCompleted));\n  }, [level, currentExperience, challengesCompleted]);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play();\n\n    if (Notification.permission === \"granted\") {\n      new Notification('Novo Desafio', {\n        body: `Valendo ${challenge.amount}xp!`\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    const {\n      amount\n    } = activeChallenge;\n    let finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level,\n      currentExperience,\n      challengesCompleted,\n      levelUp,\n      startNewChallenge,\n      activeChallenge,\n      resetChallenge,\n      experienceToNextLevel,\n      completeChallenge\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(LevelUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/petve/OneDrive/Documentos/MeusProjetos/NLW/mova-se/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","Cookies","challenges","LevelUpModal","challengesContext","ChallengesContext","ChallengesProvider","children","rest","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","set","String","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":"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","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from \"react\";\r\nimport Cookies from 'js-cookie';\r\nimport challenges from '../../challenges.json';\r\nimport { LevelUpModal } from \"../components/LevelUpModal\";\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye',\r\n    description: string,\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    experienceToNextLevel: number;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n}\r\ninterface ChallengesProviderProps {\r\n    children: ReactNode;\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n}\r\n\r\nexport const challengesContext = createContext({})\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({\r\n    children,\r\n    ...rest\r\n}: ChallengesProviderProps) {\r\n\r\n    const [level, setLevel] = useState(rest.level ?? 1);\r\n    const [currentExperience, setCurrentExperience] = useState(rest.currentExperience ?? 0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(rest.challengesCompleted ?? 0);\r\n    const [activeChallenge, setActiveChallenge] = useState(null)\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n    useEffect(() => {\r\n        Cookies.set('level', String(level))\r\n        Cookies.set('currentExperience', String(currentExperience))\r\n        Cookies.set('challengesCompleted', String(challengesCompleted))\r\n    }, [level, currentExperience, challengesCompleted])\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1)\r\n    }\r\n\r\n    function startNewChallenge() {\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n        const challenge = challenges[randomChallengeIndex]\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        new Audio('/notification.mp3').play();\r\n\r\n        if (Notification.permission === \"granted\") {\r\n            new Notification('Novo Desafio', {\r\n                body: `Valendo ${challenge.amount}xp!`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge() {\r\n        setActiveChallenge(null)\r\n    }\r\n\r\n    function completeChallenge() {\r\n        if (!activeChallenge) {\r\n            return;\r\n        }\r\n        const { amount } = activeChallenge;\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if (finalExperience >= experienceToNextLevel) {\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted + 1)\r\n    }\r\n    return (\r\n        <ChallengesContext.Provider\r\n            value={{\r\n                level,\r\n                currentExperience,\r\n                challengesCompleted,\r\n                levelUp,\r\n                startNewChallenge,\r\n                activeChallenge,\r\n                resetChallenge,\r\n                experienceToNextLevel,\r\n                completeChallenge\r\n            }}\r\n        >\r\n            {children}\r\n            <LevelUpModal />\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}